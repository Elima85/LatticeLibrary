#include "gtest/gtest.h"
#include "cclattice.h"
#include "exception.h"

using namespace CImage;

TEST(CCLattice, neighbors) {

    int nRows = 5;
    int nColumns = 6;
    int nLayers = 7;
    int nElements = nRows * nColumns * nLayers;
    double scaleFactor1 = 1.0;
    CCLattice *lattice = new CCLattice(nRows, nColumns, nLayers, scaleFactor1);
    //{r,l,bo,t,f,ba,   bor,tr,bar,fr,bol,tl,bal,fl,boba,bof,tba,tf,   bofr,tfr,tbar,bobar,bofl,tfl,tbal,bobal}
    int CC6[6] = {171, 169, 176, 164, 140, 200};
    int CC18[18] = {171, 169, 176, 164, 140, 200, 177, 165, 201, 141, 175, 163, 199, 139, 206, 146, 194, 134};
    int CC26[26] = {171, 169, 176, 164, 140, 200, 177, 165, 201, 141, 175, 163, 199, 139, 206, 146, 194, 134, 147, 135, 195, 207, 145, 133, 193, 205};
    vector<Neighbor> neighbors;
    int neighborhoodSize, correctNNeighbors;

    // 6 neighbors
    neighborhoodSize = 6;
    correctNNeighbors = 6;
    lattice->getNeighbors(3, 2, 5, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC6[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC6[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC6[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC6[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC6[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC6[5]);
    lattice->getNeighbors(lattice->rclToIndex(3, 2, 5), neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC6[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC6[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC6[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC6[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC6[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC6[5]);

    // 18 neighbors
    neighborhoodSize = 18;
    correctNNeighbors = 18;
    lattice->getNeighbors(3, 2, 5, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC18[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC18[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC18[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC18[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC18[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC18[5]);
    EXPECT_EQ(neighbors[6].getIndex(), CC18[6]);
    EXPECT_EQ(neighbors[7].getIndex(), CC18[7]);
    EXPECT_EQ(neighbors[8].getIndex(), CC18[8]);
    EXPECT_EQ(neighbors[9].getIndex(), CC18[9]);
    EXPECT_EQ(neighbors[10].getIndex(), CC18[10]);
    EXPECT_EQ(neighbors[11].getIndex(), CC18[11]);
    EXPECT_EQ(neighbors[12].getIndex(), CC18[12]);
    EXPECT_EQ(neighbors[13].getIndex(), CC18[13]);
    EXPECT_EQ(neighbors[14].getIndex(), CC18[14]);
    EXPECT_EQ(neighbors[15].getIndex(), CC18[15]);
    EXPECT_EQ(neighbors[16].getIndex(), CC18[16]);
    EXPECT_EQ(neighbors[17].getIndex(), CC18[17]);
    lattice->getNeighbors(lattice->rclToIndex(3, 2, 5), neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC18[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC18[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC18[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC18[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC18[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC18[5]);
    EXPECT_EQ(neighbors[6].getIndex(), CC18[6]);
    EXPECT_EQ(neighbors[7].getIndex(), CC18[7]);
    EXPECT_EQ(neighbors[8].getIndex(), CC18[8]);
    EXPECT_EQ(neighbors[9].getIndex(), CC18[9]);
    EXPECT_EQ(neighbors[10].getIndex(), CC18[10]);
    EXPECT_EQ(neighbors[11].getIndex(), CC18[11]);
    EXPECT_EQ(neighbors[12].getIndex(), CC18[12]);
    EXPECT_EQ(neighbors[13].getIndex(), CC18[13]);
    EXPECT_EQ(neighbors[14].getIndex(), CC18[14]);
    EXPECT_EQ(neighbors[15].getIndex(), CC18[15]);
    EXPECT_EQ(neighbors[16].getIndex(), CC18[16]);
    EXPECT_EQ(neighbors[17].getIndex(), CC18[17]);

    // 26 neighbors
    neighborhoodSize = 26;
    correctNNeighbors = 26;
    lattice->getNeighbors(3, 2, 5, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC26[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC26[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC26[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC26[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC26[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC26[5]);
    EXPECT_EQ(neighbors[6].getIndex(), CC26[6]);
    EXPECT_EQ(neighbors[7].getIndex(), CC26[7]);
    EXPECT_EQ(neighbors[8].getIndex(), CC26[8]);
    EXPECT_EQ(neighbors[9].getIndex(), CC26[9]);
    EXPECT_EQ(neighbors[10].getIndex(), CC26[10]);
    EXPECT_EQ(neighbors[11].getIndex(), CC26[11]);
    EXPECT_EQ(neighbors[12].getIndex(), CC26[12]);
    EXPECT_EQ(neighbors[13].getIndex(), CC26[13]);
    EXPECT_EQ(neighbors[14].getIndex(), CC26[14]);
    EXPECT_EQ(neighbors[15].getIndex(), CC26[15]);
    EXPECT_EQ(neighbors[16].getIndex(), CC26[16]);
    EXPECT_EQ(neighbors[17].getIndex(), CC26[17]);
    EXPECT_EQ(neighbors[18].getIndex(), CC26[18]);
    EXPECT_EQ(neighbors[19].getIndex(), CC26[19]);
    EXPECT_EQ(neighbors[20].getIndex(), CC26[20]);
    EXPECT_EQ(neighbors[21].getIndex(), CC26[21]);
    EXPECT_EQ(neighbors[22].getIndex(), CC26[22]);
    EXPECT_EQ(neighbors[23].getIndex(), CC26[23]);
    EXPECT_EQ(neighbors[24].getIndex(), CC26[24]);
    EXPECT_EQ(neighbors[25].getIndex(), CC26[25]);
    lattice->getNeighbors(lattice->rclToIndex(3, 2, 5), neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    EXPECT_EQ(neighbors[0].getIndex(), CC26[0]);
    EXPECT_EQ(neighbors[1].getIndex(), CC26[1]);
    EXPECT_EQ(neighbors[2].getIndex(), CC26[2]);
    EXPECT_EQ(neighbors[3].getIndex(), CC26[3]);
    EXPECT_EQ(neighbors[4].getIndex(), CC26[4]);
    EXPECT_EQ(neighbors[5].getIndex(), CC26[5]);
    EXPECT_EQ(neighbors[6].getIndex(), CC26[6]);
    EXPECT_EQ(neighbors[7].getIndex(), CC26[7]);
    EXPECT_EQ(neighbors[8].getIndex(), CC26[8]);
    EXPECT_EQ(neighbors[9].getIndex(), CC26[9]);
    EXPECT_EQ(neighbors[10].getIndex(), CC26[10]);
    EXPECT_EQ(neighbors[11].getIndex(), CC26[11]);
    EXPECT_EQ(neighbors[12].getIndex(), CC26[12]);
    EXPECT_EQ(neighbors[13].getIndex(), CC26[13]);
    EXPECT_EQ(neighbors[14].getIndex(), CC26[14]);
    EXPECT_EQ(neighbors[15].getIndex(), CC26[15]);
    EXPECT_EQ(neighbors[16].getIndex(), CC26[16]);
    EXPECT_EQ(neighbors[17].getIndex(), CC26[17]);
    EXPECT_EQ(neighbors[18].getIndex(), CC26[18]);
    EXPECT_EQ(neighbors[19].getIndex(), CC26[19]);
    EXPECT_EQ(neighbors[20].getIndex(), CC26[20]);
    EXPECT_EQ(neighbors[21].getIndex(), CC26[21]);
    EXPECT_EQ(neighbors[22].getIndex(), CC26[22]);
    EXPECT_EQ(neighbors[23].getIndex(), CC26[23]);
    EXPECT_EQ(neighbors[24].getIndex(), CC26[24]);
    EXPECT_EQ(neighbors[25].getIndex(), CC26[25]);
    correctNNeighbors = 7;
    lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, nColumns - 1, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, 0, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, nColumns - 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, 0, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, nColumns - 1, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, 0, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, nColumns - 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    correctNNeighbors = 11;
    lattice->getNeighbors(1, 0, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, 0, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(1, nColumns - 1, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, 1, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, nColumns - 1, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, nColumns - 1, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, 1, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(0, nColumns - 1, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(1, nColumns - 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(1, nColumns - 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    correctNNeighbors = 17;
    lattice->getNeighbors(0, 1, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(1, 0, 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(1, 1, 0, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 1, nColumns - 2, nLayers - 2, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 2, nColumns - 1, nLayers - 2, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);
    lattice->getNeighbors(nRows - 2, nColumns - 2, nLayers - 1, neighborhoodSize, neighbors);
    EXPECT_EQ(neighbors.size(), correctNNeighbors);

    // Exceptions
    neighborhoodSize = 6;
    EXPECT_THROW(lattice->getNeighbors(nRows, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(-1, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, nColumns, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, -1, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, nLayers, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, -1, neighborhoodSize, neighbors), outsideRangeException);
    neighborhoodSize = 18;
    EXPECT_THROW(lattice->getNeighbors(nRows, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(-1, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, nColumns, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, -1, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, nLayers, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, -1, neighborhoodSize, neighbors), outsideRangeException);
    neighborhoodSize = 26;
    EXPECT_THROW(lattice->getNeighbors(nRows, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(-1, 0, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, nColumns, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, -1, 0, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, nLayers, neighborhoodSize, neighbors), outsideRangeException);
    EXPECT_THROW(lattice->getNeighbors(0, 0, -1, neighborhoodSize, neighbors), outsideRangeException);
    neighborhoodSize = 8;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);
    neighborhoodSize = 12;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);
    neighborhoodSize = 14;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);
    // neighborhoodSize = 18 is valid for both CC and FCC.
    neighborhoodSize = -6;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);
    neighborhoodSize = 0;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);
    neighborhoodSize = 100;
    EXPECT_THROW(lattice->getNeighbors(0, 0, 0, neighborhoodSize, neighbors), neighborhoodSizeException);

    delete lattice;
}